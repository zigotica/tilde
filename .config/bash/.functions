#!/usr/bin/env bash

#####################################################################################
#                                          __                  _   _
#                                         / _|_   _ _ __   ___| |_(_) ___  _ __  ___
#                                        | |_| | | | '_ \ / __| __| |/ _ \| '_ \/ __|
#                                        |  _| |_| | | | | (__| |_| | (_) | | | \__ \
#                                        |_|  \__,_|_| |_|\___|\__|_|\___/|_| |_|___/
#                                          
#####################################################################################

# youtube downloader 
# use: ytd video-url
function ytd() {
  yt-dlp -f 'bestvideo+bestaudio/best/best' --merge-output-format mkv $1
}

# only audio
function ytda() {
  yt-dlp -x --audio-format flac $1
}

# Return history entries filtered by grep or number of items
# use case: hist [<grep>] [<number>]
# example: hist yarn
# example: hist 20
# example: hist yarn 20
function hist() {
  if [[ -n "$@" ]]; then
    if [ "$#" -gt 1 ]; then
      if [ -z "${2//[0-9]}" ]; then
        history | grep "$1" | tail -"$2";
      else
        echo "usage: hist [<grep>] [<number>]" >&2;
        exit 1;
      fi
    elif [ -z "${@//[0-9]}" ]; then
      history "$@";
    else
      history | grep "$@";
    fi;
  else
    history;
  fi;
}

# https://github.com/nvm-sh/nvm#automatically-call-nvm-use
# use node version defined in .nvmrc file automatically upon cd into a project,
# if that project folder includes a .nvmrc file,
# otherwise, use default version defined in nvm ls
cdnvm(){
    cd "$@";
    nvm_path=$(nvm_find_up .nvmrc | tr -d '\n')

    # If there are no .nvmrc file do nothing (use default, so you better have one)
    # There is a .nvmrc file:
    if [[ $nvm_path = *[^[:space:]]* && -s $nvm_path/.nvmrc && -r $nvm_path/.nvmrc ]]; then
      declare nvm_version
      nvm_version=$(<"$nvm_path"/.nvmrc)

      # If it is not already installed, install it
      required_version_from_nvm_ls=$(nvm ls --no-colors "$nvm_version" | tail -1 | tr -d '\->*' | tr -d '[:space:]')
      if [[ "$required_version_from_nvm_ls" == "N/A" ]]; then
        nvm install "$nvm_version";
      fi

      nvm use "$nvm_version";
    else
      nvm use default
    fi
}
alias cd='cdnvm' # alias after the function, just in case

